VBA Code:

Sub InsertColumns()

    Dim UsdCols As Long
    Dim Cnt As Long
    
    UsdCols = Cells.Find("*", SearchOrder:=xlByColumns, SearchDirection:=xlPrevious).column
    For Cnt = Int(UsdCols / 2) * 2 To 2 Step -2
        Columns(Cnt + 1).Resize(, 1).Insert
    Next Cnt
    
End Sub

Sub EveryOtherColumn()
Dim rng As Range
Dim InputRng As Range
Dim OutRng As Range
Dim xInterval As Integer
xTitleId = "KutoolsforExcel"
Set InputRng = Application.Selection
Set InputRng = Application.InputBox("Range :", xTitleId, InputRng.Address, Type:=8)
xInterval = Application.InputBox("Enter column interval", xTitleId, Type:=1)
For i = 1 To InputRng.Columns.Count Step xInterval + 1
    Set rng = InputRng.Cells(1, i)
    If OutRng Is Nothing Then
        Set OutRng = rng
    Else
        Set OutRng = Application.Union(OutRng, rng)
    End If
Next
OutRng.EntireColumn.Select
End Sub

Python Code

import os
import sys

import pandas as pd
import numpy as np

df = pd.read_csv('filepath', error_bad_lines=False, index_col=False, dtype='unicode')

a = np.arange(len(df.columns))
df.columns = [a % 3, a // 3]
df = df.stack().reset_index(drop=True)

df.to_csv('TargetRussell3000stacked.csv', sep=',')

print(df.head())

import os
import sys

import pandas as pd
import numpy as np

df = pd.read_csv('filepath', error_bad_lines=False, index_col=False, dtype='unicode')

df[['Last.Price', 'Daily.Return']] = df[['Last.Price', 'Daily.Return']].astype(float)

df = df.groupby('Dates').agg({'Last.Price':'first', 'Daily.Return':['mean','sum']})
df.columns = df.columns.map('_'.join)

df.to_csv('TargetRussel3000_py.csv', sep=',')

print(df.tail(20))

R Code

> library(readxl)
> Russell3000cumreturns <- read_excel("~/UZH/Semester VII/backtestsp500/Russell3000cumreturns.xlsx", 
+     col_types = c("date", "numeric", "numeric", 
+         "numeric"))
> View(Russell3000cumreturns)
> russelldf <- data.frame(Russell3000cumreturns)
> russdf <- melt(russelldf, id = "x", measure = c("y1", "y2", "y3"))
> library(readxl)
> Russell3000cumreturns <- read_excel("~/UZH/Semester VII/backtestsp500/Russell3000cumreturns.xlsx", 
+     col_types = c("date", "numeric", "numeric", 
+         "numeric"))
> View(Russell3000cumreturns)
> russelldf <- data.frame(Russell3000cumreturns)
> russdf <- melt(russelldf, id = "Date", measure = c("Russell3000", "Longshort", "Longonly"))
> plotruss <- ggplot(russdf, aes(Date, value, colour = variable)) + geom_line()
> plotruss
> plotruss <- plotruss + ylab("Cumulative Performance") + xlab("Dates") + scale_y_continuous(labels = scales::percent) + ggtitle("Cumulative Performances compared to S&P500")
> plotruss
> plotruss <- plotruss + ggtitle("Cumulative Performances compared to Russell 3000")
> plotruss
> plotruss1 <- plotruss + theme(legend.position = c(0, 1)) + theme(legend.title = element_blank())
> plotruss1
> 
> plotruss1 <- plotruss + theme(legend.position = c(0.1, 0.9)) + theme(legend.title = element_blank())
> plotruss1
> plotruss1 <- plotruss + theme(legend.position = c(0.2, 0.8)) + theme(legend.title = element_blank())
> plotruss1
> library(readxl)
> SP500cumreturns1 <- read_excel("~/UZH/Semester VII/backtestsp500/SP500cumreturns1.xlsx", 
+     col_types = c("date", "numeric", "numeric", 
+         "numeric"))
> View(SP500cumreturns1)
> sandpdf <- data.frame(SP500cumreturns1)
> spdf <- melt(sandpdf, id = "Date", measure = c("SP500", "Longshort", "Longonly"))
> plotsp <- ggplot(spdf, aes(Date, value, colour = variable)) + geom_line()
> plotsp <- plotsp + ylab("Cumulative Performance") + xlab("Dates") + scale_y_continuous(labels = scales::percent) + ggtitle("Cumulative Performances compared to S&P500")
> plotsp <- plotsp + theme(legend.position = c(0.2, 0.8)) + theme(legend.title = element_blank())
> plotsp
> library(readxl)
> spregression <- read_excel("~/UZH/Semester VII/backtestsp500/spregression.xlsx", 
+     col_types = c("date", "numeric", "numeric", 
+         "numeric", "numeric"))
> View(spregression)
> rmrf <- spregression$`Rm-Rf`
> smb <- spregression$SMB
> hml <- spregression$HML
> longonlysp <- spregression$`Rp-Rf`
> regsplongonly <- lm(longonlysp ~ rmrf + smb + hml)
> library("stargazer", lib.loc="~/R/win-library/3.4")
> stargazer(regsplongonly)
> library(readxl)
> spregressionlongshort <- read_excel("~/UZH/Semester VII/backtestsp500/spregressionlongshort.xlsx")
> View(spregressionlongshort)
> longshort <- spregressionlongshort$`Rp-Rf`
> regsplongshort <- lm(longshort ~ rmrf + smb + hml)
> stargazer(regsplongonly, regsplongshort, align = TRUE)
> library(readxl)
> russellregressionlong <- read_excel("~/UZH/Semester VII/backtestsp500/russellregressionlong.xlsx", 
+     col_types = c("date", "numeric", "numeric", 
+         "numeric", "numeric"))
> View(russellregressionlong)
> russlong <- russellregressionlong$`Rp-Rf`
> regrusslong <- lm(russlong ~ rmrf + smb + hml)
> stargazer(regrusslong)
> library(readxl)
> spregressionlongshort <- read_excel("~/UZH/Semester VII/backtestsp500/spregressionlongshort.xlsx", 
+     col_types = c("date", "numeric", "numeric", 
+         "numeric", "numeric"))
> View(spregressionlongshort)
> longshort <- spregressionlongshort$`Rp-Rf`
> regsplongshort <- lm(longshort ~ rmrf + smb + hml)
> stargazer(regsplongshort)
> sharpe(SP500cumreturns1$SP500, r = 0, scale = sqrt(250))
> sharpe(SP500cumreturns1$Longshort, r = 0, scale = sqrt(250))
> sharpe(SP500cumreturns1$Longonly, r = 0, scale = sqrt(250))
> sharpe(Russell3000cumreturns$Russell3000, r = 0, scale = sqrt(250))
> sharpe(SP500cumreturns1$Longshort, r = 0, scale = sqrt(250))
> sharpe(Russell3000cumreturns$Longshort, r = 0, scale = sqrt(250))
> sharpe(Russell3000cumreturns$Longshort, r = 0, scale = sqrt(250))
> sharpe(Russell3000cumreturns$Longonly, r = 0, scale = sqrt(250))
> maxdrawdown(SP500cumreturns1$SP500)
> maxdrawdown(SP500cumreturns1$Longshort)
> maxdrawdown(SP500cumreturns1$Longonly)
> maxdrawdown(Russell3000cumreturns$Russell3000)
> maxdrawdown(Russell3000cumreturns$Longshort)
> maxdrawdown(Russell3000cumreturns$Longonly)
